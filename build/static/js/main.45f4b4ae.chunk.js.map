{"version":3,"sources":["Search.js","Home.js","nav.js","pbody.js","App.js","serviceWorker.js","index.js"],"names":["Search","p","useState","dataitems","setDataitems","val1","setVal1","valcount","setValcount","s","match","params","val","Array","isArray","useEffect","i","length","rr","RegExp","fetch","method","headers","then","res","ok","json","r","v","text","replace","re","split","map","it","JSON","stringify","a","get_da","className","c","data-id","surah","section","Home","categories","setCategories","category","setCategory","console","log","onClick","e","target","dataset","id","label","StyledBreadcrumb","withStyles","theme","root","backgroundColor","palette","grey","height","spacing","color","fontWeight","typography","fontWeightRegular","margin","boxShadow","shadows","emphasize","Chip","useStyles","makeStyles","flexGrow","menuButton","marginRight","title","display","breakpoints","up","search","position","borderRadius","shape","fade","common","white","marginLeft","width","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","classes","ipRef","useRef","showInfo","setShowInfo","handleDelSearchClick","setshowSearch","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","InputBase","placeholder","input","onKeyUp","setTimeout","el","value","inputProps","ref","Button","current","Breadcrumbs","component","href","icon","fontSize","style","onDelete","Body","showSearch","to","App","path","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.45f4b4ae.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport './Home.css';\n//import  {useState, useEffect} from \"react\";\n\nfunction Search(p){\n    const [dataitems,setDataitems]=useState([]);\n    const [val1,setVal1]=useState(\"\");\n    const [valcount,setValcount]=useState(\"\");\n\n    \n    var s={}\n    \n       if (p.match){\n        if (p.match.params){\n            s.val=p.match.params.val\n         }\n       }\n       if ( s.val  ){\n           s.val= Array.isArray(s.val)?s.val[0]:s.val\n           if (val1!==s.val){\n            setVal1(s.val)\n           }\n       }\n    //\n    function get_da(i){\n        if (!i && i!==0){return}\n        if (i.length <2){\n            setDataitems([ ]);\n            return\n\n        }\n        function re(a){return \" !~ \"+a+\" !~ \"}\n        var rr=RegExp(i,\"gi\")\n        fetch(`/search?text=${i}`, { \n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n            }\n          }).then( res=>{\n            setValcount(0)\n\n            if(!res.ok) {\n                setDataitems(['error '+JSON.stringify(res)]);\n\n            } else{\n                res.json().then(r=>{\n                    for (let v of r){\n                    v.text=v.text.replace(rr,re).split(\" !~ \").map((it,i)=>i===0 || i%2===0 ?it:<em>{it}</em>)\n                    }\n                    setDataitems(r)\n                    setValcount(r.length)\n                });\n            }\n            \n        });\n    \n    }\n    \n     useEffect( () => {\n        get_da(val1) \n    },[val1]);\n    return(\n        <div className=\"main-wrap\">         \n            <div className=\"dataitems-val\">{val1}:&nbsp; {valcount}</div>\n            <div className=\"dataitems-wrap search-wrap\">\n                {dataitems.map(c=>(\n                    <div className=\"dataitems\" data-id={c.surah}>\n                        <div className=\"datahdr\">\n                            <div className=\"cat\">{c.surah}</div>\n                            <div className=\"num\">{c.section}</div>\n                        </div>\n                        <div className=\"txt\">\n                            {c.text}\n                        </div>\n                  </div>\n                ))}\n            </div>\n           \n        </div>\n    )\n}\n\n\n\nexport default Search;","import React, {useState, useEffect} from \"react\";\nimport './Home.css';\n\nfunction Home(p){\n    const [categories,setCategories]=useState([]);\n    const [dataitems,setDataitems]=useState([]);\n    const [category,setCategory]=useState([]);\n\n    console.log(\"AAAA\")\n    function get_da(i){\n        if (!i && i!==0){return}\n        console.log(\"yyyyy\")\n\n        fetch(`/category?id=${i}`, { \n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n            }\n          }).then( res=>{\n            if(!res.ok) {\n                setDataitems(['error '+JSON.stringify(res)]);\n            } else{\n                console.log(\"xxx\")\n                res.json().then(r=>{\n                    setDataitems(r)\n                });\n            }\n            \n        });\n    \n    }\n   \n    const onChangeCategory = (e)=>{\n        setCategory(e.target.dataset.id)\n    }\n    const onChangedataitems=(e)=>{\n\n    }\n    function get_data(){\n            \n        fetch(\"/home\", { \n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n            }\n          }).then( res=>{\n            if(!res.ok) {\n                setCategories(['error '+JSON.stringify(res)]);\n            } else{\n                res.json().then(r=>{\n                    setCategories(r)\n                });\n            }\n            \n        });\n    }\n    useEffect( () => {\n        get_data() \n    },[]);\n    useEffect( () => {\n        get_da(category) \n    },[category]);\n    return(\n        <div className=\"main-wrap\">\n            <div className=\"category-wrap\" onClick={onChangeCategory}>\n            {categories.map(c=>(\n                <div className=\"category\" data-id={c.surah}>{c.label}</div>\n            ))}\n            </div>\n            <div className=\"dataitems-wrap\" onClick={onChangedataitems}>\n            {dataitems.map(c=>(\n                <div className=\"dataitems\" data-id={c.surah}>\n                    <div className=\"datahdr\">\n                        <div className=\"cat\">{c.surah}</div>\n                        <div className=\"num\">{c.section}</div>\n\n                    </div>\n                    <div className=\"txt\" >\n                    {c.text}\n                    </div>\n                </div>\n            ))}\n            </div>\n           \n        </div>\n    )\n}\n\n\nexport default Home;","import React from 'react';\nimport   {useState} from \"react\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport  { useRef} from \"react\";\n//import  {useState, useEffect } from \"react\";\n\nimport Button from '@material-ui/core/Button';\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    margin: \"8px 0\",\n\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300],\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); \n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  \n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nexport default function SearchAppBar(p) {\n  const classes = useStyles();\n  const ipRef = useRef(null)\n  const [showInfo,setShowInfo] = useState(false)\n\n  const onChangeval = (e)=>{\n    setTimeout(\n        function(el){\n            if (el && \"value\" in el){\n             //p.setVal(el.value)\n             setShowInfo(true)\n             p.setshowSearch(el.value)\n            }\n\n        },200,e.target\n    )\n}\nconst clearval = (e)=>{\n  \n             //p.setVal(el.value)\n             p.setshowSearch(\"\")\n             ipRef.current.value=\" \"\n            \n\n        \n    \n}\n\nconst handleClick=(e)=>{\n   \n\n}\nconst handleDelSearchClick=(e)=>{\n  setShowInfo(false)\n  p.setshowSearch(\"\")\n\n\n}\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Verses\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              onKeyUp={onChangeval}\n              inputProps={{ 'aria-label': 'search' }}\n              ref={ipRef}\n            />\n          </div>\n          <Button color=\"inherit\" onClick={clearval}>Clear</Button>\n\n        </Toolbar>\n      </AppBar>\n      <Breadcrumbs aria-label=\"breadcrumb\">\n  <StyledBreadcrumb\n    component=\"a\"\n    href=\"#\"\n    label=\"Home\"\n    icon={<HomeIcon fontSize=\"small\" />}\n    onClick={handleDelSearchClick}\n  />\n  <StyledBreadcrumb\n  style={{ display: showInfo ? \"block\" : \"none\" }}\n    label=\"Search\"\n    //onClick={handleClick}\n    onDelete={handleDelSearchClick}\n  />\n</Breadcrumbs>\n    </div>\n  );\n}","import {Redirect} from 'react-router-dom';\nimport React from 'react';\n\nfunction Body(p){\n     if(p.showSearch){       \n\n        return <Redirect to={`/Search/${p.showSearch}`}/> \n    } else{\n        return <Redirect to={`/Home`}/> \n\n    }\n    \n}\nexport default Body;\n","import React, {useState} from \"react\";\n//import {useEffect} from \"react\";\n\nimport Search from './Search';\nimport Home from './Home';\nimport SearchAppBar from \"./nav\"\nimport { \n  BrowserRouter as Router,\n  Route\n\n} from 'react-router-dom';\nimport './App.css';\nimport Body from './pbody'\n\nfunction App() {\n  const [val,setVal]=useState(\"\");\n  const [showSearch,setshowSearch]=useState(\"\");\n  return (\n    <div className=\"App\">\n\n      <SearchAppBar setshowSearch={setshowSearch}/>\n      <Router>\n          <Body showSearch={showSearch} />\n           <Route path=\"/Search/:val\" component={Search}></Route> \n           <Route   path=\"/Home\" component={Home}></Route>\n            <Route exact path=\"/\" component={Body} showSearch={showSearch} val={val}></Route>\n      </Router>   \n</div>)\n/*\n      <div className =\"row justify-content-center\">\n      <Router>\n\n           <Route path=\"/Search/:val\" component={Search}></Route> \n           <Route   path=\"/Home\" component={Home}></Route>\n\n              <Route exact path=\"/\" component={Body} showSearch={showSearch} val={val}></Route>\n              </Router>       \n\n      </div>     \n   \n    </div>\n  );\n  */\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}